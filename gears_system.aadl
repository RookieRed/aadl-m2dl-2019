package gears_system
public
	-- Data types
	with Base_Types;
	with Data_Model;
	Boolean renames data Base_Types::Boolean;
	Integer renames data Base_Types::Integer;
	
	-- Custom data types
	data shock_absorber
	end shock_absorber;
	data implementation shock_absorber.imp
		properties
			Data_Model::Data_Representation => enum;
			Data_Model::Enumerators => ("vol", "sol");
	end shock_absorber.imp;
	
	data handle
	end handle;
	data implementation handle.imp
		properties
			Data_Model::Data_Representation => enum;
			Data_Model::Enumerators => ("up", "down");
	end handle.imp;

	system digital_part
		features
			general_EV: out data port Boolean;
			open_EV: out data port Boolean;
			close_EV: out data port Boolean;
			rectract_EV: out data port Boolean;
			extend_EV: out data port Boolean;
			handle: in data port handle.imp;
			state: in data port handle.imp;
			maneuvring: out data port Boolean;
			locked_down: out data port Boolean;
			error: out data port Boolean;
			door_closed: in event data port Boolean;
			door_openned: in event data port Boolean;
			gear_extended: in event data port Boolean;
			gear_retracted: in event data port Boolean;
			gear_shock_absorb: in event data port shock_absorber.imp;
	end digital_part;

	system implementation digital_part.dp1
		subcomponents
			dp_mem: memory dp_RAM;
			dp_proc: processor dp_processor;
			dps: process dp_software.dps;
			mbdp: bus mem_bus;
		connections
			digital_part_dp1_new_connection: bus access dp_proc.mbus <-> mbdp;
			digital_part_dp1_new_connection2: bus access dp_mem.mbus <-> mbdp;
	end digital_part.dp1;

	device electro_valve
		features
			hydrolic_in: requires bus access hydrolic_bus;
			hydrolic_out: requires bus access hydrolic_bus;
			dp_orders: in data port;
	end electro_valve;

	device implementation electro_valve.general_EV
	end electro_valve.general_EV;

	device implementation electro_valve.close_EV
	end electro_valve.close_EV;

	device implementation electro_valve.retract_EV
	end electro_valve.retract_EV;

	device implementation electro_valve.extend_EV
	end electro_valve.extend_EV;

	device implementation electro_valve.open_EV
	end electro_valve.open_EV;

	thread pilote_interface_thread
		features
			maneuvring: out data port Boolean;
			locked_down: out data port Boolean;
			error: out data port Boolean;
			door_closed: in event data port Boolean;
			door_openned: in event data port Boolean;
			gear_extended: in event data port Boolean;
			gear_retracted: in event data port Boolean;
			gear_shock_absorb: in event data port shock_absorber.imp;
	end pilote_interface_thread;

	thread gears_manager_thread
		features
			door_closed: in event data port Boolean;
			door_openned: in event data port Boolean;
			gear_extended: in event data port Boolean;
			gear_retracted: in event data port Boolean;
			gear_shock_absorb: in event data port shock_absorber.imp;
	end gears_manager_thread;

	process dp_software
	end dp_software;

	device pilote_interface
		features
			maneuvring: in data port Boolean;
			locked_down: in data port Boolean;
			error: in data port Boolean;
	end pilote_interface;

	device pilot_command
		features
			handle: out event data port handle.imp;
	end pilot_command;

	device analogical_switch
	end analogical_switch;

	device descret_sensor
		features
			value: out event data port;
	end descret_sensor;

	device implementation descret_sensor.door_close_sensor
	end descret_sensor.door_close_sensor;

	device implementation descret_sensor.door_open_sensor
	end descret_sensor.door_open_sensor;

	device implementation descret_sensor.gears_extend_sensor
	end descret_sensor.gears_extend_sensor;

	device implementation descret_sensor.gears_retract_sensor
	end descret_sensor.gears_retract_sensor;

	device implementation descret_sensor.gear_shock_sensor
	end descret_sensor.gear_shock_sensor;

	process implementation dp_software.dps
		subcomponents
			pit: thread pilote_interface_thread;
	end dp_software.dps;

	memory dp_RAM
		features
			mbus: requires bus access mem_bus;
	end dp_RAM;

	processor dp_processor
		features
			mbus: requires bus access mem_bus;
	end dp_processor;

	bus mem_bus
	end mem_bus;

	bus hydrolic_bus
	end hydrolic_bus;

	bus dp_to_ev_bus
	end dp_to_ev_bus;
	
end gears_system;
